{{define "cmd apichecker" -}}
{{template "header" .}}
## Current Features for {{.Name}}

+ Checks for API updates
+ Can automatically update Trello checklist for the updates required
+ Supports trello integration

## Usage

+ To run a real check for updates, parse Trello API info as flags or add them to the updates.json file and use the following command from apichecker folder in GCT:
```bash
go build && apichecker.exe --verbose
```

+ Upon addition of a new exchange, to update Trello checklist and to add the exchange to updates.json the following would need to be done:

#### HTML Scraping method:
```go
func TestAdd(t *testing.T) {
	t.Parallel()
	data := HTMLScrapingData{TokenData: "div",
		Key:    "class",
		Val:    "col-md-12",
		RegExp: "col-md-12([\\s\\S]*?)clearfix",
		Path:   "https://localbitcoins.com/api-docs/"}
	err := Add("LocalBitcoins", htmlScrape, data.Path, data, true, &testConfigData)
	if err != nil {
		t.Error(err)
    }
}
```

#### Github SHA Check Method:
```go
func TestAdd(t *testing.T) {
	t.Parallel()
	data := GithubData{Repo: "LBank-exchange/lbank-official-api-docs"}
	err := Add("Lbank", github, fmt.Sprintf(githubPath, data.Repo), data, false, &configData)
	if err != nil {
		t.Error(err)
    }
}
```

+ If all the authentication variables for trello are set trello checklist will be automatically updated with the format of 'Exchange Name (integer of how many updates have been released since the exhange API was last worked on):
```go
func NameStateChanges(currentName, currentState string) (string, error) {
	r, err := regexp.Compile(`[\s\S]* \d{1}$`) // nolint: gocritic
	if err != nil {
		return "", err
	}
	var tempNumber int64
	var finalNumber string
	if r.MatchString(currentName) {
		stringNum := string(currentName[len(currentName)-1])
		tempNumber, err = strconv.ParseInt(stringNum, 10, 64)
		if err != nil {
			return "", err
		}
		if tempNumber != 1 || currentState != complete {
			tempNumber++
		} else {
			tempNumber = 1
		}
		finalNumber = strconv.FormatInt(tempNumber, 10)
	}
	byteNumber := []byte(finalNumber)
	byteName := []byte(currentName)
	byteName = byteName[:len(byteName)-1]
	byteName = append(byteName, byteNumber[0])
	return string(byteName), nil
}
```

### Please click GoDocs chevron above to view current GoDoc information for this package
{{template "contributions"}}
{{template "donations"}}
{{end}}